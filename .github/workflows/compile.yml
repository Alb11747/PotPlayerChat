name: Compile

on:
  workflow_call:
    inputs:
      app-version:
        required: true
        type: string
      distribution-channel:
        required: true
        type: string
    secrets:
      TWITCH_CLIENT_ID:
        required: false
      TWITCH_CLIENT_SECRET:
        required: false

permissions:
  contents: write
  id-token: write
  attestations: write

env:
  NODE_NO_WARNINGS: 1
  npm_config_audit: false
  npm_config_fund: false

jobs:
  compile:
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Write Twitch keys JSON
        run: |
          $json = @"
          {
          "clientId": "$env:TWITCH_CLIENT_ID",
          "clientSecret": "$env:TWITCH_CLIENT_SECRET"
          }
          "@
          New-Item -ItemType Directory -Path resources -Force | Out-Null
          Set-Content -Path resources\twitch-keys.json -Value $json -Encoding UTF8
        shell: pwsh
        if: ${{ env.TWITCH_CLIENT_ID }}
        env:
          TWITCH_CLIENT_ID: ${{ secrets.TWITCH_CLIENT_ID }}
          TWITCH_CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - run: npm ci

      - run: npm version "${{inputs.app-version}}" --no-git-tag-version
      - run: npm run build:win
        env:
          VITE_DISTRIBUTION_CHANNEL: ${{inputs.distribution-channel}}
          VITE_GIT_HASH: ${{ github.sha }}
          APP_VERSION: ${{inputs.app-version}}

      - run: npm run test --if-present

      - uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'dist/*.exe'

      - name: Upload compiled app
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{inputs.distribution-channel}}
          path: dist
